{"ast":null,"code":"var _jsxFileName = \"/Users/maxim/Code/Udemy/react/complete-react-developer-zero-to-mastery/crown-store/src/components/with-spinner/with-spinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerOverlay, SpinnerContainer } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponenet => {\n  const spinner = ({\n    isLoading,\n    ...otherProps\n  }) => {\n    return isLoading ? /*#__PURE__*/React.createElement(SpinnerOverlay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(SpinnerContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 4\n      }\n    })) : /*#__PURE__*/React.createElement(WrappedComponenet, Object.assign({}, otherProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 3\n      }\n    }));\n  };\n\n  return spinner;\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/Users/maxim/Code/Udemy/react/complete-react-developer-zero-to-mastery/crown-store/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponenet","spinner","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,QAA+C,uBAA/C;;AAEA,MAAMC,WAAW,GAAGC,iBAAiB,IAAI;AACxC,QAAMC,OAAO,GAAG,CAAC;AAACC,IAAAA,SAAD;AAAY,OAAGC;AAAf,GAAD,KAAgC;AAAC,WAAOD,SAAS,gBAChE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADgE,gBAKhE,oBAAC,iBAAD,oBAAuBC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALgD;AAM/C,GANF;;AAQA,SAAOF,OAAP;AACA,CAVD;;AAYA,eAAeF,WAAf","sourcesContent":["import React from 'react';\nimport {SpinnerOverlay, SpinnerContainer} from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponenet => {\n const spinner = ({isLoading, ...otherProps}) => {return isLoading ? (\n  <SpinnerOverlay>\n   <SpinnerContainer/>\n  </SpinnerOverlay>\n ) : (\n  <WrappedComponenet {...otherProps}/>\n )};\n\n return spinner\n}\n\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}