{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleprovider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleprovider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  user,\n  additionalData\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/maxim/Code/Udemy/react/complete-react-developer-zero-to-mastery/crown-store/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleprovider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\nimport UserActionTypes from './user.types';\nimport {\n signInSuccess,\n signInFailure,\n signOutSuccess,\n signOutFailure,\n signUpSuccess,\n signUpFailure\n} from './user.actions';\nimport {\n auth,\n googleprovider,\n createUserProfileDocument,\n getCurrentUser,\n} from '../../firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n try {\n  const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n  const userSnapshot = yield userRef.get();\n  yield put(\n   signInSuccess({id: userSnapshot.id, ...userSnapshot.data()})\n  )\n } catch (error) {\n  yield put(signInFailure(error));\n }\n}\n\nexport function* signInWithGoogle() {\n try {\n  const {user} = yield auth.signInWithPopup(googleprovider);\n  yield getSnapshotFromUserAuth(user);\n } catch (error) {\n  yield put(signInFailure(error));\n }\n}\n\nexport function* signInWithEmail({payload: {email,password}}) {\n try {\n  const {user} = yield auth.signInWithEmailAndPassword(email,password);\n  yield getSnapshotFromUserAuth(user);\n } catch (error) {\n  yield put(signInFailure(error))\n }\n}\n\nexport function* isUserAuthenticated() {\n try {\n  const userAuth = yield getCurrentUser();\n  if(!userAuth) return;\n  yield getSnapshotFromUserAuth(userAuth);\n } catch (error) {\n  yield put(signInFailure(error))\n }\n}\n\nexport function* signOut() {\n try {\n  yield auth.signOut();\n  yield put(signOutSuccess())\n } catch (error) {\n  yield put(signOutFailure(error));\n }\n}\n\nexport function* signUp({payload: {email, password, displayName}}) {\ntry {\n const { user } = yield auth.createUserWithEmailAndPassword(\n  email,\n  password\n);\nyield put(signUpSuccess({user, additionalData: {displayName}}));\n} catch (error) {\n yield put(signUpFailure(error))\n}\n}\n\nexport function* signInAfterSignUp({user,additionalData}) {\n yield getSnapshotFromUserAuth(user, additionalData)\n}\n\nexport function* onGoogleSignInStart() {\n yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart() {\n yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* onSignUpSuccess() {\n yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSaga() {\n yield all([\n  call(onGoogleSignInStart),\n  call(onEmailSignInStart),\n  call(onCheckUserSession),\n  call(onSignOutStart),\n  call(onSignUpStart),\n  call(onSignUpSuccess)\n ])\n}"]},"metadata":{},"sourceType":"module"}