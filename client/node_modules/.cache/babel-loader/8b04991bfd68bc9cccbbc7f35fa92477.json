{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fatchCollectionFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fatchCollectionFailure(error.message));\n  }\n}\n;\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}\nexport function* shopSaga() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["/Users/maxim/Code/Udemy/react/complete-react-developer-zero-to-mastery/crown-store/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fatchCollectionFailure","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTION_START","shopSaga"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AAEA,SACCC,sBADD,EAECC,sBAFD,QAGO,gBAHP;AAKA,OAAO,UAAUC,oBAAV,GAAiC;AACvC,MAAI;AACH,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACK,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMV,GAAG,CAACK,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMb,GAAG,CAACM,sBAAsB,CAACO,KAAK,CAACC,OAAP,CAAvB,CAAT;AACA;AACD;AAAA;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACvC,QAAMjB,UAAU,CACfI,eAAe,CAACc,sBADD,EAEfT,oBAFe,CAAhB;AAIA;AAED,OAAO,UAAUU,QAAV,GAAqB;AAC3B,QAAMhB,GAAG,CAAC,CACTF,IAAI,CAACgB,oBAAD,CADK,CAAD,CAAT;AAGA","sourcesContent":["import {takeLatest, call, put, all} from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport {\n fetchCollectionSuccess,\n fatchCollectionFailure\n} from './shop.actions';\n \nexport function* fetchCollectionAsync() {\n try {\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n  yield put(fetchCollectionSuccess(collectionsMap))\n } catch (error) {\n  yield put(fatchCollectionFailure(error.message))\n }\n};\n\nexport function* fetchCollectionStart() {\n yield takeLatest(\n  ShopActionTypes.FETCH_COLLECTION_START,\n  fetchCollectionAsync\n )\n}\n\nexport function* shopSaga() {\n yield all([\n  call(fetchCollectionStart)\n ])\n}"]},"metadata":{},"sourceType":"module"}