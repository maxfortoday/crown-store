{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionsMap\n});\nexport const fatchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n      this.setState({\n        loading: false\n      });\n    }).catch(error => dispatch(fatchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/maxim/Code/Udemy/react/complete-react-developer-zero-to-mastery/crown-store/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTION_START","fetchCollectionSuccess","collectionsMap","FETCH_COLLECTION_SUCCESS","payload","fatchCollectionFailure","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","setState","loading","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,wBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAA/B;AAKP,OAAO,MAAMG,sBAAsB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,wBADkC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAA/B;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACA,WAAKa,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAJD,EAIGC,KAJH,CAISC,KAAK,IAAIT,QAAQ,CAACJ,sBAAsB,CAACa,KAAK,CAACC,OAAP,CAAvB,CAJ1B;AAKA,GATD;AAUA,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionStart = () => ({\n type: ShopActionTypes.FETCH_COLLECTION_START,\n});\n\nexport const fetchCollectionSuccess = (collectionsMap) => ({\n type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n payload: collectionsMap\n})\n\nexport const fatchCollectionFailure = (errorMessage) => ({\n type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n payload: errorMessage\n})\n\nexport const fetchCollectionStartAsync = () => {\n return dispatch => {\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionStart())\n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionsMap));\n    this.setState({loading: false})\n  }).catch(error => dispatch(fatchCollectionFailure(error.message)));\n }\n}"]},"metadata":{},"sourceType":"module"}