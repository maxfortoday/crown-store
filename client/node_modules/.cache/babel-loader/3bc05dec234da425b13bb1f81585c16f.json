{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumaltedQuantity, cartItem) => accumaltedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumaltedQuantity, cartItem) => accumaltedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/maxim/Code/Udemy/react/complete-react-developer-zero-to-mastery/crown-store/src/redux/cart/cart-selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumaltedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAIA,IAAI,CAACE,SAF+B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACI,MAFgC,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CACjD,CAACI,eAAD,CADiD,EAEjDC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,kBAAD,EAAqBC,QAArB,KAAkCD,kBAAkB,GAAGC,QAAQ,CAACC,QAAjF,EAA0F,CAA1F,CAFoC,CAA3C;AAKP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC5C,CAACI,eAAD,CAD4C,EAE5CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,kBAAD,EAAqBC,QAArB,KAAkCD,kBAAkB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAArG,EAA2G,CAA3G,CAF+B,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n [selectCart],\n cart => cart.cartItems\n)\n\nexport const selectCartHidden = createSelector(\n [selectCart],\n cart => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n [selectCartItems],\n cartItems => cartItems.reduce((accumaltedQuantity, cartItem) => accumaltedQuantity + cartItem.quantity,0)\n)\n\nexport const selectCartTotal = createSelector(\n [selectCartItems],\n cartItems => cartItems.reduce((accumaltedQuantity, cartItem) => accumaltedQuantity + cartItem.quantity * cartItem.price,0)\n)"]},"metadata":{},"sourceType":"module"}