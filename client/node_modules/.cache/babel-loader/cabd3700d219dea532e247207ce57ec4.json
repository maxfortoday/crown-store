{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleprovider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleprovider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/maxim/Code/Udemy/react/complete-react-developer-zero-to-mastery/crown-store/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleprovider","createUserProfileDocument","signInSuccess","signInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAClD,MAAI;AACH,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BI,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CACRO,aAAa,CAAC;AAACO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CADL,CAAT;AAGA,GAND,CAME,OAAOC,KAAP,EAAc;AACf,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CAArB;AACA,UAAMI,uBAAuB,CAACS,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOF,KAAP,EAAc;AACf,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAV,CAA1B,EAAuD;AAC7D,MAAI;AACH,UAAM;AAACL,MAAAA;AAAD,QAAS,MAAMd,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAArB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOF,KAAP,EAAc;AACf,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACtC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACA;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACrC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACA;AAED,OAAO,UAAUS,QAAV,GAAqB;AAC3B,QAAM5B,GAAG,CAAC,CACTC,IAAI,CAACuB,mBAAD,CADK,EAETvB,IAAI,CAACyB,kBAAD,CAFK,CAAD,CAAT;AAIA","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\nimport UserActionTypes from './user.types';\nimport {auth, googleprovider, createUserProfileDocument} from '../../firebase/firebase.utils';\nimport {signInSuccess, signInFailure} from './user.actions'\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n try {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n  yield put(\n   signInSuccess({id: userSnapshot.id, ...userSnapshot.data()})\n  )\n } catch (error) {\n  yield put(signInFailure(error));\n }\n}\n\nexport function* signInWithGoogle() {\n try {\n  const {user} = yield auth.signInWithPopup(googleprovider);\n  yield getSnapshotFromUserAuth(user);\n } catch (error) {\n  yield put(signInFailure(error));\n }\n}\n\nexport function* signInWithEmail({payload: {email,password}}) {\n try {\n  const {user} = yield auth.signInWithEmailAndPassword(email,password);\n  yield getSnapshotFromUserAuth(user);\n } catch (error) {\n  yield put(signInFailure(error))\n }\n}\n\nexport function* onGoogleSignInStart() {\n yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSaga() {\n yield all([\n  call(onGoogleSignInStart),\n  call(onEmailSignInStart)\n ])\n}"]},"metadata":{},"sourceType":"module"}